<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	  <groupId>tn.esprit</groupId>
  <artifactId>SLTS_Client</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

	<name>MyDemo</name>
	<url>http://code.google.com/p/jacp</url>
	<developers>
		<developer>
			<id>fj</id>
			<name>Fatma Jaafar</name>
			<email>fatma.jaafar404@gmail.com</email>
		</developer>
	</developers>
	<properties>
	<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<javafx.version>2.2</javafx.version>
		 <exec.mainClass>tn.esprit.sltsclient.App</exec.mainClass>
	
	</properties>
			<dependencies>
					<dependency>
						<groupId>com.oracle</groupId>
						<artifactId>ant-javafx</artifactId>
						<version>${javafx.version}</version>
						<systemPath>${java.home}/../lib/ant-javafx.jar</systemPath>
						<scope>system</scope>
					</dependency>
				<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.10.Final</version>
		</dependency>
					<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-ejb-client-bom</artifactId>
			<version>9.0.0.Alpha1</version>
			<type>pom</type>
		</dependency>
				<dependency>
			<groupId>tn.esprit</groupId>
			<artifactId>SLTS_server-ejb</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<type>ejb</type>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jfoenix/jfoenix -->
<dependency>
    <groupId>com.jfoenix</groupId>
    <artifactId>jfoenix</artifactId>
    <version>1.4.0</version>
</dependency>
		<!-- https://mvnrepository.com/artifact/org.controlsfx/controlsfx -->
<dependency>
    <groupId>org.controlsfx</groupId>
    <artifactId>controlsfx</artifactId>
    <version>8.40.11</version>
</dependency>
<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
		<dependency>
      <groupId>com.dorkbox</groupId>
      <artifactId>Notify</artifactId>
      <version>3.7</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/de.jensd/fontawesomefx -->
<dependency>
    <groupId>de.jensd</groupId>
    <artifactId>fontawesomefx</artifactId>
    <version>8.9</version>
</dependency>
    <!-- https://mvnrepository.com/artifact/javax.mail/mail -->
<dependency>
    <groupId>javax.mail</groupId>
    <artifactId>mail</artifactId>
    <version>1.4</version>
</dependency>
    <!-- https://mvnrepository.com/artifact/log4j/log4j -->
<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version>
</dependency>
    <dependency>
  <groupId>com.twilio.sdk</groupId>
  <artifactId>twilio</artifactId>
  <version>7.17.0</version>
</dependency>
<dependency>
    <groupId>org.javamoney</groupId>
    <artifactId>moneta</artifactId>
    <version>1.1</version>
</dependency>
  <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
<dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>2.2.2</version>
</dependency>
  	
<dependency>
    <groupId>com.yahoofinance-api</groupId>
    <artifactId>YahooFinanceAPI</artifactId>
    <version>3.13.0-SNAPSHOT</version>
</dependency>
	
<dependency>
            <groupId>org.apache.opennlp</groupId>
            <artifactId>opennlp-tools</artifactId>
            <version>1.5.3</version>
        </dependency>
        <dependency>
            <groupId>org.twitter4j</groupId>
            <artifactId>twitter4j-core</artifactId>
            <version>4.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.twitter4j</groupId>
            <artifactId>twitter4j-stream</artifactId>
            <version>4.0.1</version>
        </dependency>  
 <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.1</version>
        </dependency>  
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore -->
<dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpcore</artifactId>
    <version>4.4.6</version>
</dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.james/apache-mime4j -->
<dependency>
    <groupId>org.apache.james</groupId>
    <artifactId>apache-mime4j</artifactId>
    <version>0.6.1</version>
</dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
<dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpclient</artifactId>
    <version>4.0-alpha4</version>
</dependency>
        <!-- https://mvnrepository.com/artifact/com.mashape.unirest/unirest-java -->
<dependency>
    <groupId>com.mashape.unirest</groupId>
    <artifactId>unirest-java</artifactId>
    <version>1.3.0</version>
</dependency>
        
				</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- copy all dependencies of your app to target folder -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<configuration>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			
			<plugin>

				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<JavaFX-Version>${javafx.version}+</JavaFX-Version>
							<Main-Class>org.jacp.demo.MyMain</Main-Class>
							<implementation-version>1.0</implementation-version>
							<JavaFX-Application-Class>org.jacp.demo.MyMain</JavaFX-Application-Class>
							<JavaFX-Class-Path>
								<!-- list all your dependencies here -->
								myDep1.jar myDep2.jar
							</JavaFX-Class-Path>
							<!-- The artifactId (name) of the jfxrt.jar ... see dependency system 
								scope -->
							<Class-Path>javafx-${javafx.version}.jar</Class-Path>
						</manifestEntries>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<target>
								<!-- define the deploy ANT task -->
								<taskdef name="jfxdeploy" classname="com.sun.javafx.tools.ant.DeployFXTask"
									classpathref="maven.plugin.classpath" />
								<!-- define the JarSing ANT task -->
								<taskdef name="jfxsignjar" classname="com.sun.javafx.tools.ant.FXSignJarTask"
									classpathref="maven.plugin.classpath" />
								<jfxdeploy width="1024" height="768"
									outdir="${project.build.directory}/deploy" outfile="${build.finalName}"
									nativeBundles="all">
									<info title="${project.name}" />
									<!-- set the main class of your applcation; I had to create a Main.class 
										(class Main extends MyMain) otherwise it will return an error on start -->
									<application name="${project.name}" mainClass="com.javafx.main.Main" />
									<resources>
										<fileset dir="${project.build.directory}" includes="*.jar" />
										<fileset dir="${project.build.directory}/dependency"
											includes="*.jar" />
									</resources>
									<!-- set your jvm args -->
									<platform javafx="${javafx.version}+">
										<jvmarg value="-Xms512m" />
										<jvmarg value="-Xmx1024m" />
									</platform>
								</jfxdeploy>
								<!-- you need to generate a key yourself -->
								<jfxsignjar destdir="${project.build.directory}/deploy"
									keyStore="path/to/your/keystore" storePass="yourPass" alias="yourAlias"
									keyPass="keyPass">
									<fileset dir="${project.build.directory}/deploy"
										includes="*.jar" />
								</jfxsignjar>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
		
			</plugin>
		
		<plugin>

				<groupId>com.zenjava</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>8.8.3</version>
				<configuration>
					<mainClass>your.package.with.Launcher</mainClass>
				</configuration>
			</plugin>
		
		</plugins>
		<finalName>ITradeIt</finalName>
	</build>	
</project>